// Copyright 2023 The Blocky Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: blocky/api/annotations.proto

package blockyannnotations

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Defines the query behavior for a field.
type FieldQueryOption int32

const (
	// Unspecified field filter behavior, do not use.
	FieldQueryOption_FIELD_QUERY_BEHAVIOR_UNSPECIFIED FieldQueryOption = 0
	// Field forbids filtering.
	FieldQueryOption_FORBID_FILTERING FieldQueryOption = 1
	// Field forbids sorting.
	FieldQueryOption_FORBID_SORTING FieldQueryOption = 2
	// Allow null values to be filtered.
	FieldQueryOption_NULLABLE FieldQueryOption = 3
)

// Enum value maps for FieldQueryOption.
var (
	FieldQueryOption_name = map[int32]string{
		0: "FIELD_QUERY_BEHAVIOR_UNSPECIFIED",
		1: "FORBID_FILTERING",
		2: "FORBID_SORTING",
		3: "NULLABLE",
	}
	FieldQueryOption_value = map[string]int32{
		"FIELD_QUERY_BEHAVIOR_UNSPECIFIED": 0,
		"FORBID_FILTERING":                 1,
		"FORBID_SORTING":                   2,
		"NULLABLE":                         3,
	}
)

func (x FieldQueryOption) Enum() *FieldQueryOption {
	p := new(FieldQueryOption)
	*p = x
	return p
}

func (x FieldQueryOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldQueryOption) Descriptor() protoreflect.EnumDescriptor {
	return file_blocky_api_annotations_proto_enumTypes[0].Descriptor()
}

func (FieldQueryOption) Type() protoreflect.EnumType {
	return &file_blocky_api_annotations_proto_enumTypes[0]
}

func (x FieldQueryOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldQueryOption.Descriptor instead.
func (FieldQueryOption) EnumDescriptor() ([]byte, []int) {
	return file_blocky_api_annotations_proto_rawDescGZIP(), []int{0}
}

var file_blocky_api_annotations_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*QueryParameters)(nil),
		Field:         20364996,
		Name:          "blocky.api.query_params",
		Tag:           "bytes,20364996,opt,name=query_params",
		Filename:      "blocky/api/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: ([]FieldQueryOption)(nil),
		Field:         20364997,
		Name:          "blocky.api.query_opt",
		Tag:           "varint,20364997,rep,name=query_opt,enum=blocky.api.FieldQueryOption",
		Filename:      "blocky/api/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*int64)(nil),
		Field:         20364998,
		Name:          "blocky.api.complexity",
		Tag:           "varint,20364998,opt,name=complexity",
		Filename:      "blocky/api/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*MessageProperties)(nil),
		Field:         20364999,
		Name:          "blocky.api.properties",
		Tag:           "bytes,20364999,opt,name=properties",
		Filename:      "blocky/api/annotations.proto",
	},
}

// Extension fields to descriptorpb.MethodOptions.
var (
	// Defines the query parameters for a message.
	// The pagination defines pagination behavior for the message.
	//
	// Examples:
	//
	//	message ListPeopleRequest {
	//	  option (query_params) = {
	//	    pagination: {
	//	      max_size: 100,
	//	      default_size: 10,
	//	    },
	//	    order_by: "name, age desc",
	//	    max_complexity: 1000,
	//	    resource: "people",
	//	  };
	//
	//	message Person {
	//	  string name = 1;
	//	  int32 age = 2;
	//	}
	//
	// optional blocky.api.QueryParameters query_params = 20364996;
	E_QueryParams = &file_blocky_api_annotations_proto_extTypes[0]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// Defines query specification that the field supports.
	// Can be used multiple times to precisely define the query behavior.
	//
	// repeated blocky.api.FieldQueryOption query_opt = 20364997;
	E_QueryOpt = &file_blocky_api_annotations_proto_extTypes[1]
	// Defines the complexity at which the server serves queries
	// on this field (i.e. filtering or sorting).
	// This can be useful for a query complexity calculation.
	//
	// optional int64 complexity = 20364998;
	E_Complexity = &file_blocky_api_annotations_proto_extTypes[2]
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional blocky.api.MessageProperties properties = 20364999;
	E_Properties = &file_blocky_api_annotations_proto_extTypes[3]
)

var File_blocky_api_annotations_proto protoreflect.FileDescriptor

var file_blocky_api_annotations_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x23, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x21, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2a, 0x70, 0x0a, 0x10, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x20, 0x46, 0x49, 0x45, 0x4c,
	0x44, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x42, 0x45, 0x48, 0x41, 0x56, 0x49, 0x4f, 0x52,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x46, 0x4f, 0x52, 0x42, 0x49, 0x44, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x49,
	0x4e, 0x47, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x4f, 0x52, 0x42, 0x49, 0x44, 0x5f, 0x53,
	0x4f, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x55, 0x4c, 0x4c,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x03, 0x3a, 0x61, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xc4, 0xfd, 0xda, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0b, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x3a, 0x5b, 0x0a, 0x09, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x5f, 0x6f, 0x70, 0x74, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xc5, 0xfd, 0xda, 0x09, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1c,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x4f, 0x70, 0x74, 0x3a, 0x40, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x78, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0xc6, 0xfd, 0xda, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x78, 0x69, 0x74, 0x79, 0x3a, 0x61, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xc7, 0xfd, 0xda, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x42, 0xbb, 0x01, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x42, 0x10,
	0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x4e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x67, 0x6f, 0x2d, 0x67,
	0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3b, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x6e, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x3b, 0xa2, 0x02, 0x03, 0x42, 0x41, 0x58, 0xaa, 0x02, 0x0a, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x79, 0x2e, 0x41, 0x70, 0x69, 0xca, 0x02, 0x0a, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x5c, 0x41,
	0x70, 0x69, 0xe2, 0x02, 0x16, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x5c, 0x41, 0x70, 0x69, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0b, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x79, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_blocky_api_annotations_proto_rawDescOnce sync.Once
	file_blocky_api_annotations_proto_rawDescData = file_blocky_api_annotations_proto_rawDesc
)

func file_blocky_api_annotations_proto_rawDescGZIP() []byte {
	file_blocky_api_annotations_proto_rawDescOnce.Do(func() {
		file_blocky_api_annotations_proto_rawDescData = protoimpl.X.CompressGZIP(file_blocky_api_annotations_proto_rawDescData)
	})
	return file_blocky_api_annotations_proto_rawDescData
}

var file_blocky_api_annotations_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_blocky_api_annotations_proto_goTypes = []interface{}{
	(FieldQueryOption)(0),               // 0: blocky.api.FieldQueryOption
	(*descriptorpb.MethodOptions)(nil),  // 1: google.protobuf.MethodOptions
	(*descriptorpb.FieldOptions)(nil),   // 2: google.protobuf.FieldOptions
	(*descriptorpb.MessageOptions)(nil), // 3: google.protobuf.MessageOptions
	(*QueryParameters)(nil),             // 4: blocky.api.QueryParameters
	(*MessageProperties)(nil),           // 5: blocky.api.MessageProperties
}
var file_blocky_api_annotations_proto_depIdxs = []int32{
	1, // 0: blocky.api.query_params:extendee -> google.protobuf.MethodOptions
	2, // 1: blocky.api.query_opt:extendee -> google.protobuf.FieldOptions
	2, // 2: blocky.api.complexity:extendee -> google.protobuf.FieldOptions
	3, // 3: blocky.api.properties:extendee -> google.protobuf.MessageOptions
	4, // 4: blocky.api.query_params:type_name -> blocky.api.QueryParameters
	0, // 5: blocky.api.query_opt:type_name -> blocky.api.FieldQueryOption
	5, // 6: blocky.api.properties:type_name -> blocky.api.MessageProperties
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	4, // [4:7] is the sub-list for extension type_name
	0, // [0:4] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_blocky_api_annotations_proto_init() }
func file_blocky_api_annotations_proto_init() {
	if File_blocky_api_annotations_proto != nil {
		return
	}
	file_blocky_api_message_properties_proto_init()
	file_blocky_api_query_parameters_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blocky_api_annotations_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 4,
			NumServices:   0,
		},
		GoTypes:           file_blocky_api_annotations_proto_goTypes,
		DependencyIndexes: file_blocky_api_annotations_proto_depIdxs,
		EnumInfos:         file_blocky_api_annotations_proto_enumTypes,
		ExtensionInfos:    file_blocky_api_annotations_proto_extTypes,
	}.Build()
	File_blocky_api_annotations_proto = out.File
	file_blocky_api_annotations_proto_rawDesc = nil
	file_blocky_api_annotations_proto_goTypes = nil
	file_blocky_api_annotations_proto_depIdxs = nil
}
