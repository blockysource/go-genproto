// Copyright 2023 The Blocky Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: blocky/authz/type/jwk.proto

package jwkpb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// JWK represents a JSON Web Key as defined in RFC 7517.
// https://tools.ietf.org/html/rfc7517;
// NOTE: this does not unmarshal to JSON directly, as the 'bytes' fields are
// urlsafe base64 encoded in the JSON representation.
type JWK struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Use       string   `protobuf:"bytes,1,opt,name=use,proto3" json:"use,omitempty"`
	Kty       string   `protobuf:"bytes,2,opt,name=kty,proto3" json:"kty,omitempty"`
	Kid       string   `protobuf:"bytes,3,opt,name=kid,proto3" json:"kid,omitempty"`
	Crv       string   `protobuf:"bytes,4,opt,name=crv,proto3" json:"crv,omitempty"`
	Alg       string   `protobuf:"bytes,5,opt,name=alg,proto3" json:"alg,omitempty"`
	K         []byte   `protobuf:"bytes,6,opt,name=k,proto3" json:"k,omitempty"`
	X         []byte   `protobuf:"bytes,7,opt,name=x,proto3" json:"x,omitempty"`
	Y         []byte   `protobuf:"bytes,8,opt,name=y,proto3" json:"y,omitempty"`
	N         []byte   `protobuf:"bytes,9,opt,name=n,proto3" json:"n,omitempty"`
	E         []byte   `protobuf:"bytes,10,opt,name=e,proto3" json:"e,omitempty"`
	D         []byte   `protobuf:"bytes,11,opt,name=d,proto3" json:"d,omitempty"`
	P         []byte   `protobuf:"bytes,12,opt,name=p,proto3" json:"p,omitempty"`
	Q         []byte   `protobuf:"bytes,13,opt,name=q,proto3" json:"q,omitempty"`
	Dp        []byte   `protobuf:"bytes,14,opt,name=dp,proto3" json:"dp,omitempty"`
	Dq        []byte   `protobuf:"bytes,15,opt,name=dq,proto3" json:"dq,omitempty"`
	Qi        []byte   `protobuf:"bytes,16,opt,name=qi,proto3" json:"qi,omitempty"`
	X5C       [][]byte `protobuf:"bytes,17,rep,name=x5c,proto3" json:"x5c,omitempty"`
	X5U       string   `protobuf:"bytes,18,opt,name=x5u,proto3" json:"x5u,omitempty"`
	X5TSha1   []byte   `protobuf:"bytes,19,opt,name=x5t_sha1,json=x5t,proto3" json:"x5t_sha1,omitempty"`
	X5TSha256 []byte   `protobuf:"bytes,20,opt,name=x5t_sha256,json=x5t#S256,proto3" json:"x5t_sha256,omitempty"`
}

func (x *JWK) Reset() {
	*x = JWK{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocky_authz_type_jwk_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JWK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JWK) ProtoMessage() {}

func (x *JWK) ProtoReflect() protoreflect.Message {
	mi := &file_blocky_authz_type_jwk_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JWK.ProtoReflect.Descriptor instead.
func (*JWK) Descriptor() ([]byte, []int) {
	return file_blocky_authz_type_jwk_proto_rawDescGZIP(), []int{0}
}

func (x *JWK) GetUse() string {
	if x != nil {
		return x.Use
	}
	return ""
}

func (x *JWK) GetKty() string {
	if x != nil {
		return x.Kty
	}
	return ""
}

func (x *JWK) GetKid() string {
	if x != nil {
		return x.Kid
	}
	return ""
}

func (x *JWK) GetCrv() string {
	if x != nil {
		return x.Crv
	}
	return ""
}

func (x *JWK) GetAlg() string {
	if x != nil {
		return x.Alg
	}
	return ""
}

func (x *JWK) GetK() []byte {
	if x != nil {
		return x.K
	}
	return nil
}

func (x *JWK) GetX() []byte {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *JWK) GetY() []byte {
	if x != nil {
		return x.Y
	}
	return nil
}

func (x *JWK) GetN() []byte {
	if x != nil {
		return x.N
	}
	return nil
}

func (x *JWK) GetE() []byte {
	if x != nil {
		return x.E
	}
	return nil
}

func (x *JWK) GetD() []byte {
	if x != nil {
		return x.D
	}
	return nil
}

func (x *JWK) GetP() []byte {
	if x != nil {
		return x.P
	}
	return nil
}

func (x *JWK) GetQ() []byte {
	if x != nil {
		return x.Q
	}
	return nil
}

func (x *JWK) GetDp() []byte {
	if x != nil {
		return x.Dp
	}
	return nil
}

func (x *JWK) GetDq() []byte {
	if x != nil {
		return x.Dq
	}
	return nil
}

func (x *JWK) GetQi() []byte {
	if x != nil {
		return x.Qi
	}
	return nil
}

func (x *JWK) GetX5C() [][]byte {
	if x != nil {
		return x.X5C
	}
	return nil
}

func (x *JWK) GetX5U() string {
	if x != nil {
		return x.X5U
	}
	return ""
}

func (x *JWK) GetX5TSha1() []byte {
	if x != nil {
		return x.X5TSha1
	}
	return nil
}

func (x *JWK) GetX5TSha256() []byte {
	if x != nil {
		return x.X5TSha256
	}
	return nil
}

var File_blocky_authz_type_jwk_proto protoreflect.FileDescriptor

var file_blocky_authz_type_jwk_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x2f, 0x6a, 0x77, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xff, 0x02, 0x0a, 0x03,
	0x4a, 0x57, 0x4b, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x74, 0x79, 0x12, 0x37, 0x0a, 0x03, 0x6b, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x25, 0xfa, 0x41, 0x22, 0x0a, 0x20, 0x61, 0x75, 0x74, 0x68, 0x7a,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x6b, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x72, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63,
	0x72, 0x76, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x61, 0x6c, 0x67, 0x12, 0x0c, 0x0a, 0x01, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x01, 0x6b, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x78,
	0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x79, 0x12, 0x0c,
	0x0a, 0x01, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x6e, 0x12, 0x0c, 0x0a, 0x01,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x70, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x01, 0x70, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x01, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x02, 0x64, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x71, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x02, 0x64, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x71, 0x69, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x02, 0x71, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x78, 0x35, 0x63, 0x18, 0x11, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x03, 0x78, 0x35, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x78, 0x35, 0x75, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x78, 0x35, 0x75, 0x12, 0x15, 0x0a, 0x08, 0x78, 0x35, 0x74, 0x5f,
	0x73, 0x68, 0x61, 0x31, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x78, 0x35, 0x74, 0x12,
	0x1c, 0x0a, 0x0a, 0x78, 0x35, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x78, 0x35, 0x74, 0x23, 0x53, 0x32, 0x35, 0x36, 0x42, 0xcb, 0x01,
	0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x7a, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x42, 0x08, 0x4a, 0x77, 0x6b, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x67, 0x6f, 0x2d,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x2f,
	0x61, 0x75, 0x74, 0x68, 0x7a, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x6a, 0x77, 0x6b, 0x70, 0x62,
	0x3b, 0x6a, 0x77, 0x6b, 0x70, 0x62, 0x3b, 0xa2, 0x02, 0x03, 0x42, 0x41, 0x54, 0xaa, 0x02, 0x11,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x7a, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0xca, 0x02, 0x11, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x5c, 0x41, 0x75, 0x74, 0x68, 0x7a,
	0x5c, 0x54, 0x79, 0x70, 0x65, 0xe2, 0x02, 0x1d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x5c, 0x41,
	0x75, 0x74, 0x68, 0x7a, 0x5c, 0x54, 0x79, 0x70, 0x65, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x13, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x3a, 0x3a,
	0x41, 0x75, 0x74, 0x68, 0x7a, 0x3a, 0x3a, 0x54, 0x79, 0x70, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_blocky_authz_type_jwk_proto_rawDescOnce sync.Once
	file_blocky_authz_type_jwk_proto_rawDescData = file_blocky_authz_type_jwk_proto_rawDesc
)

func file_blocky_authz_type_jwk_proto_rawDescGZIP() []byte {
	file_blocky_authz_type_jwk_proto_rawDescOnce.Do(func() {
		file_blocky_authz_type_jwk_proto_rawDescData = protoimpl.X.CompressGZIP(file_blocky_authz_type_jwk_proto_rawDescData)
	})
	return file_blocky_authz_type_jwk_proto_rawDescData
}

var file_blocky_authz_type_jwk_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_blocky_authz_type_jwk_proto_goTypes = []interface{}{
	(*JWK)(nil), // 0: blocky.authz.type.JWK
}
var file_blocky_authz_type_jwk_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_blocky_authz_type_jwk_proto_init() }
func file_blocky_authz_type_jwk_proto_init() {
	if File_blocky_authz_type_jwk_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_blocky_authz_type_jwk_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JWK); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blocky_authz_type_jwk_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_blocky_authz_type_jwk_proto_goTypes,
		DependencyIndexes: file_blocky_authz_type_jwk_proto_depIdxs,
		MessageInfos:      file_blocky_authz_type_jwk_proto_msgTypes,
	}.Build()
	File_blocky_authz_type_jwk_proto = out.File
	file_blocky_authz_type_jwk_proto_rawDesc = nil
	file_blocky_authz_type_jwk_proto_goTypes = nil
	file_blocky_authz_type_jwk_proto_depIdxs = nil
}
