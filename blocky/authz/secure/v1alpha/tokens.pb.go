// Copyright 2023 The Blocky Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: blocky/authz/secure/v1alpha/tokens.proto

package authzsecurev1alpha

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for
// [TokensService.IssueToken][blocky.authz.secure.v1alpha.TokensService.IssueToken].
type IssueTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required, the subject of the token.
	// The subject is the unique identifier of the user or service account that the token represents.
	Subject string `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	// Optional key identifier used to sign this token.
	// If not provided, the token will be signed with the default key.
	// If provided, it must be a valid key identifier, otherwise the request will fail,
	// with the error NotFound.
	KeyId string `protobuf:"bytes,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	// Optional custom claims to be added to the token.
	// By default, the token will contain the following claims:
	// - sub: the subject of the token
	// - iss: the issuer of the token
	// - aud: the audience of the token
	// - iat: the time the token was issued
	// - exp: the time the token will expire
	// - jti: the unique identifier of the token
	Claims *structpb.Struct `protobuf:"bytes,3,opt,name=claims,proto3" json:"claims,omitempty"`
	// Required, the scope of the token.
	// The scope is a list of strings that represent the permissions that the token grants.
	Scope string `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
	// Optional, identifier of the client that is requesting the token.
	// If not provided, the token will be issued for the default client,
	// and no scope validation will be performed.
	// Note: this affects permissible scopes, not the validity of the token.
	ClientId string `protobuf:"bytes,5,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *IssueTokenRequest) Reset() {
	*x = IssueTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueTokenRequest) ProtoMessage() {}

func (x *IssueTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueTokenRequest.ProtoReflect.Descriptor instead.
func (*IssueTokenRequest) Descriptor() ([]byte, []int) {
	return file_blocky_authz_secure_v1alpha_tokens_proto_rawDescGZIP(), []int{0}
}

func (x *IssueTokenRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *IssueTokenRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *IssueTokenRequest) GetClaims() *structpb.Struct {
	if x != nil {
		return x.Claims
	}
	return nil
}

func (x *IssueTokenRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *IssueTokenRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

// IssueTokenResponse is a response used to issue a token.
type IssueTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Is the access token
	AccessToken  string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	ExpiresIn    int64  `protobuf:"varint,3,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
}

func (x *IssueTokenResponse) Reset() {
	*x = IssueTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueTokenResponse) ProtoMessage() {}

func (x *IssueTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueTokenResponse.ProtoReflect.Descriptor instead.
func (*IssueTokenResponse) Descriptor() ([]byte, []int) {
	return file_blocky_authz_secure_v1alpha_tokens_proto_rawDescGZIP(), []int{1}
}

func (x *IssueTokenResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *IssueTokenResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *IssueTokenResponse) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

type IntrospectTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Claims *StandardTokenClaims `protobuf:"bytes,1,opt,name=claims,proto3" json:"claims,omitempty"`
}

func (x *IntrospectTokenResponse) Reset() {
	*x = IntrospectTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntrospectTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntrospectTokenResponse) ProtoMessage() {}

func (x *IntrospectTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntrospectTokenResponse.ProtoReflect.Descriptor instead.
func (*IntrospectTokenResponse) Descriptor() ([]byte, []int) {
	return file_blocky_authz_secure_v1alpha_tokens_proto_rawDescGZIP(), []int{2}
}

func (x *IntrospectTokenResponse) GetClaims() *StandardTokenClaims {
	if x != nil {
		return x.Claims
	}
	return nil
}

type RefreshTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken              string `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	ForceConfigurationOptions bool   `protobuf:"varint,2,opt,name=force_configuration_options,json=forceConfigurationOptions,proto3" json:"force_configuration_options,omitempty"`
}

func (x *RefreshTokenRequest) Reset() {
	*x = RefreshTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenRequest) ProtoMessage() {}

func (x *RefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*RefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_blocky_authz_secure_v1alpha_tokens_proto_rawDescGZIP(), []int{3}
}

func (x *RefreshTokenRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *RefreshTokenRequest) GetForceConfigurationOptions() bool {
	if x != nil {
		return x.ForceConfigurationOptions
	}
	return false
}

type RefreshTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId string `protobuf:"bytes,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *RefreshTokenResponse) Reset() {
	*x = RefreshTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenResponse) ProtoMessage() {}

func (x *RefreshTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenResponse.ProtoReflect.Descriptor instead.
func (*RefreshTokenResponse) Descriptor() ([]byte, []int) {
	return file_blocky_authz_secure_v1alpha_tokens_proto_rawDescGZIP(), []int{4}
}

func (x *RefreshTokenResponse) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

type RevokeRefreshTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *RevokeRefreshTokenRequest) Reset() {
	*x = RevokeRefreshTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeRefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeRefreshTokenRequest) ProtoMessage() {}

func (x *RevokeRefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeRefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*RevokeRefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_blocky_authz_secure_v1alpha_tokens_proto_rawDescGZIP(), []int{5}
}

func (x *RevokeRefreshTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// IntrospectedTokenClaims is a set of claims that are returned when introspecting a token.
type StandardTokenClaims struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId   string `protobuf:"bytes,1,opt,name=token_id,json=jti,proto3" json:"token_id,omitempty"`
	Active    bool   `protobuf:"varint,2,opt,name=active,proto3" json:"active,omitempty"`
	Subject   string `protobuf:"bytes,3,opt,name=subject,json=sub,omitempty,proto3" json:"subject,omitempty"`
	ExpiresAt int64  `protobuf:"varint,4,opt,name=expires_at,json=exp,omitempty,proto3" json:"expires_at,omitempty"`
	IssuedAt  int64  `protobuf:"varint,5,opt,name=issued_at,json=iat,omitempty,proto3" json:"issued_at,omitempty"`
	RevokedAt int64  `protobuf:"varint,6,opt,name=revoked_at,json=rat,omitempty,proto3" json:"revoked_at,omitempty"`
	NotBefore int64  `protobuf:"varint,7,opt,name=not_before,json=nbf,omitempty,proto3" json:"not_before,omitempty"`
	Issuer    string `protobuf:"bytes,8,opt,name=issuer,json=iss,omitempty,proto3" json:"issuer,omitempty"`
	Scope     string `protobuf:"bytes,9,opt,name=scope,proto3" json:"scope,omitempty"`
	Audience  string `protobuf:"bytes,10,opt,name=audience,json=aud,omitempty,proto3" json:"audience,omitempty"`
	ClientId  string `protobuf:"bytes,11,opt,name=client_id,json=client_id,omitempty,proto3" json:"client_id,omitempty"`
}

func (x *StandardTokenClaims) Reset() {
	*x = StandardTokenClaims{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StandardTokenClaims) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StandardTokenClaims) ProtoMessage() {}

func (x *StandardTokenClaims) ProtoReflect() protoreflect.Message {
	mi := &file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StandardTokenClaims.ProtoReflect.Descriptor instead.
func (*StandardTokenClaims) Descriptor() ([]byte, []int) {
	return file_blocky_authz_secure_v1alpha_tokens_proto_rawDescGZIP(), []int{6}
}

func (x *StandardTokenClaims) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *StandardTokenClaims) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *StandardTokenClaims) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *StandardTokenClaims) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *StandardTokenClaims) GetIssuedAt() int64 {
	if x != nil {
		return x.IssuedAt
	}
	return 0
}

func (x *StandardTokenClaims) GetRevokedAt() int64 {
	if x != nil {
		return x.RevokedAt
	}
	return 0
}

func (x *StandardTokenClaims) GetNotBefore() int64 {
	if x != nil {
		return x.NotBefore
	}
	return 0
}

func (x *StandardTokenClaims) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *StandardTokenClaims) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *StandardTokenClaims) GetAudience() string {
	if x != nil {
		return x.Audience
	}
	return ""
}

func (x *StandardTokenClaims) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

// IntrospectTokenRequest is a request used to introspect a token.
type IntrospectTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *IntrospectTokenRequest) Reset() {
	*x = IntrospectTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntrospectTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntrospectTokenRequest) ProtoMessage() {}

func (x *IntrospectTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntrospectTokenRequest.ProtoReflect.Descriptor instead.
func (*IntrospectTokenRequest) Descriptor() ([]byte, []int) {
	return file_blocky_authz_secure_v1alpha_tokens_proto_rawDescGZIP(), []int{7}
}

func (x *IntrospectTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// IssueKeyTypeTokenRequest is a request used to sign a user defined payload.
type IssueKeyTypeTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId    string `protobuf:"bytes,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"` // Is the optional unique identifier of given token. If not provided, the token will be assigned a random unique identifier.
	KeyTypeId  string `protobuf:"bytes,2,opt,name=key_type_id,json=keyTypeId,proto3" json:"key_type_id,omitempty"`
	JsonClaims []byte `protobuf:"bytes,3,opt,name=json_claims,json=jsonClaims,proto3" json:"json_claims,omitempty"` // The payload to sign. It could be encoded in any format, as the token will treat it as opaque, and encode into standard base64 in its claims.
}

func (x *IssueKeyTypeTokenRequest) Reset() {
	*x = IssueKeyTypeTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueKeyTypeTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueKeyTypeTokenRequest) ProtoMessage() {}

func (x *IssueKeyTypeTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueKeyTypeTokenRequest.ProtoReflect.Descriptor instead.
func (*IssueKeyTypeTokenRequest) Descriptor() ([]byte, []int) {
	return file_blocky_authz_secure_v1alpha_tokens_proto_rawDescGZIP(), []int{8}
}

func (x *IssueKeyTypeTokenRequest) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *IssueKeyTypeTokenRequest) GetKeyTypeId() string {
	if x != nil {
		return x.KeyTypeId
	}
	return ""
}

func (x *IssueKeyTypeTokenRequest) GetJsonClaims() []byte {
	if x != nil {
		return x.JsonClaims
	}
	return nil
}

// IssueKeyTypeTokenResponse is a response used to sign a user defined payload.
type IssueKeyTypeTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedToken string `protobuf:"bytes,1,opt,name=signed_token,json=signedToken,proto3" json:"signed_token,omitempty"`
	TokenId     string `protobuf:"bytes,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"` // Is the unique identifier of given token.
}

func (x *IssueKeyTypeTokenResponse) Reset() {
	*x = IssueKeyTypeTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueKeyTypeTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueKeyTypeTokenResponse) ProtoMessage() {}

func (x *IssueKeyTypeTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueKeyTypeTokenResponse.ProtoReflect.Descriptor instead.
func (*IssueKeyTypeTokenResponse) Descriptor() ([]byte, []int) {
	return file_blocky_authz_secure_v1alpha_tokens_proto_rawDescGZIP(), []int{9}
}

func (x *IssueKeyTypeTokenResponse) GetSignedToken() string {
	if x != nil {
		return x.SignedToken
	}
	return ""
}

func (x *IssueKeyTypeTokenResponse) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

// IntrospectKeyTypeTokenRequest is a request used to introspect a user defined payload.
type IntrospectKeyTypeTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyTypeId string `protobuf:"bytes,1,opt,name=key_type_id,json=keyTypeId,proto3" json:"key_type_id,omitempty"`
	Token     string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *IntrospectKeyTypeTokenRequest) Reset() {
	*x = IntrospectKeyTypeTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntrospectKeyTypeTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntrospectKeyTypeTokenRequest) ProtoMessage() {}

func (x *IntrospectKeyTypeTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntrospectKeyTypeTokenRequest.ProtoReflect.Descriptor instead.
func (*IntrospectKeyTypeTokenRequest) Descriptor() ([]byte, []int) {
	return file_blocky_authz_secure_v1alpha_tokens_proto_rawDescGZIP(), []int{10}
}

func (x *IntrospectKeyTypeTokenRequest) GetKeyTypeId() string {
	if x != nil {
		return x.KeyTypeId
	}
	return ""
}

func (x *IntrospectKeyTypeTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// IntrospectKeyTypeTokenResponse is a response used to introspect a user defined payload.
type IntrospectKeyTypeTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId     string `protobuf:"bytes,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	JsonPayload []byte `protobuf:"bytes,2,opt,name=json_payload,json=jsonPayload,proto3" json:"json_payload,omitempty"`
	Active      bool   `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	ExpiresAt   int64  `protobuf:"varint,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	IssuedAt    int64  `protobuf:"varint,5,opt,name=issued_at,json=issuedAt,proto3" json:"issued_at,omitempty"`
	Issuer      string `protobuf:"bytes,6,opt,name=issuer,proto3" json:"issuer,omitempty"`
}

func (x *IntrospectKeyTypeTokenResponse) Reset() {
	*x = IntrospectKeyTypeTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntrospectKeyTypeTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntrospectKeyTypeTokenResponse) ProtoMessage() {}

func (x *IntrospectKeyTypeTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntrospectKeyTypeTokenResponse.ProtoReflect.Descriptor instead.
func (*IntrospectKeyTypeTokenResponse) Descriptor() ([]byte, []int) {
	return file_blocky_authz_secure_v1alpha_tokens_proto_rawDescGZIP(), []int{11}
}

func (x *IntrospectKeyTypeTokenResponse) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *IntrospectKeyTypeTokenResponse) GetJsonPayload() []byte {
	if x != nil {
		return x.JsonPayload
	}
	return nil
}

func (x *IntrospectKeyTypeTokenResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *IntrospectKeyTypeTokenResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *IntrospectKeyTypeTokenResponse) GetIssuedAt() int64 {
	if x != nil {
		return x.IssuedAt
	}
	return 0
}

func (x *IntrospectKeyTypeTokenResponse) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

var File_blocky_authz_secure_v1alpha_tokens_proto protoreflect.FileDescriptor

var file_blocky_authz_secure_v1alpha_tokens_proto_rawDesc = []byte{
	0x0a, 0x28, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2f, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x79, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xc1, 0x01, 0x0a, 0x11, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x05, 0x6b,
	0x65, 0x79, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x03, 0xe0,
	0x41, 0x01, 0x52, 0x06, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x12, 0x19, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x7b, 0x0a, 0x12, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x5f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x49, 0x6e, 0x22, 0x63, 0x0a, 0x17, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x48, 0x0a, 0x06, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2e, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x73, 0x52, 0x06, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x22, 0x7a, 0x0a, 0x13, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3e, 0x0a, 0x1b, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x31, 0x0a, 0x14, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x19, 0x52, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xed, 0x02, 0x0a, 0x13,
	0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x73, 0x12, 0x15, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x74, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x1e, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x21, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x2c, 0x6f, 0x6d, 0x69, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x69, 0x61, 0x74, 0x2c, 0x6f, 0x6d,
	0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0a, 0x72, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x61, 0x74,
	0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0a, 0x6e, 0x6f,
	0x74, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x6e, 0x62, 0x66, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x1d, 0x0a,
	0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69,
	0x73, 0x73, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x75, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2e, 0x0a, 0x16, 0x49,
	0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x76, 0x0a, 0x18, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x73, 0x22, 0x59, 0x0a, 0x19, 0x49, 0x73, 0x73, 0x75, 0x65, 0x4b, 0x65, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x55,
	0x0a, 0x1d, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0b, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xca, 0x01, 0x0a, 0x1e, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x6a, 0x73, 0x6f, 0x6e, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x72, 0x32, 0xd7, 0x03, 0x0a, 0x0d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x6d, 0x0a, 0x0a, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x2e, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x7a, 0x2e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x7a, 0x2e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x30, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x7a, 0x2e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x7a, 0x2e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x12, 0x52, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x36,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2e, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x7c,
	0x0a, 0x0f, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x33, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a,
	0x2e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x49, 0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x7a, 0x2e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x91, 0x02, 0x0a,
	0x1f, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x7a, 0x2e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x42, 0x0b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x52, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x79, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x2f, 0x61, 0x75, 0x74, 0x68,
	0x7a, 0x2f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x3b, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0xa2, 0x02, 0x03, 0x42, 0x41, 0x53, 0xaa, 0x02, 0x1b, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x79, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x7a, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e,
	0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0xca, 0x02, 0x1b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x79,
	0x5c, 0x41, 0x75, 0x74, 0x68, 0x7a, 0x5c, 0x53, 0x65, 0x63, 0x75, 0x72, 0x65, 0x5c, 0x56, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0xe2, 0x02, 0x27, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x5c, 0x41,
	0x75, 0x74, 0x68, 0x7a, 0x5c, 0x53, 0x65, 0x63, 0x75, 0x72, 0x65, 0x5c, 0x56, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x1e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x3a, 0x3a, 0x41, 0x75, 0x74, 0x68, 0x7a, 0x3a,
	0x3a, 0x53, 0x65, 0x63, 0x75, 0x72, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_blocky_authz_secure_v1alpha_tokens_proto_rawDescOnce sync.Once
	file_blocky_authz_secure_v1alpha_tokens_proto_rawDescData = file_blocky_authz_secure_v1alpha_tokens_proto_rawDesc
)

func file_blocky_authz_secure_v1alpha_tokens_proto_rawDescGZIP() []byte {
	file_blocky_authz_secure_v1alpha_tokens_proto_rawDescOnce.Do(func() {
		file_blocky_authz_secure_v1alpha_tokens_proto_rawDescData = protoimpl.X.CompressGZIP(file_blocky_authz_secure_v1alpha_tokens_proto_rawDescData)
	})
	return file_blocky_authz_secure_v1alpha_tokens_proto_rawDescData
}

var file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_blocky_authz_secure_v1alpha_tokens_proto_goTypes = []interface{}{
	(*IssueTokenRequest)(nil),              // 0: blocky.authz.secure.v1alpha.IssueTokenRequest
	(*IssueTokenResponse)(nil),             // 1: blocky.authz.secure.v1alpha.IssueTokenResponse
	(*IntrospectTokenResponse)(nil),        // 2: blocky.authz.secure.v1alpha.IntrospectTokenResponse
	(*RefreshTokenRequest)(nil),            // 3: blocky.authz.secure.v1alpha.RefreshTokenRequest
	(*RefreshTokenResponse)(nil),           // 4: blocky.authz.secure.v1alpha.RefreshTokenResponse
	(*RevokeRefreshTokenRequest)(nil),      // 5: blocky.authz.secure.v1alpha.RevokeRefreshTokenRequest
	(*StandardTokenClaims)(nil),            // 6: blocky.authz.secure.v1alpha.StandardTokenClaims
	(*IntrospectTokenRequest)(nil),         // 7: blocky.authz.secure.v1alpha.IntrospectTokenRequest
	(*IssueKeyTypeTokenRequest)(nil),       // 8: blocky.authz.secure.v1alpha.IssueKeyTypeTokenRequest
	(*IssueKeyTypeTokenResponse)(nil),      // 9: blocky.authz.secure.v1alpha.IssueKeyTypeTokenResponse
	(*IntrospectKeyTypeTokenRequest)(nil),  // 10: blocky.authz.secure.v1alpha.IntrospectKeyTypeTokenRequest
	(*IntrospectKeyTypeTokenResponse)(nil), // 11: blocky.authz.secure.v1alpha.IntrospectKeyTypeTokenResponse
	(*structpb.Struct)(nil),                // 12: google.protobuf.Struct
	(*emptypb.Empty)(nil),                  // 13: google.protobuf.Empty
}
var file_blocky_authz_secure_v1alpha_tokens_proto_depIdxs = []int32{
	12, // 0: blocky.authz.secure.v1alpha.IssueTokenRequest.claims:type_name -> google.protobuf.Struct
	6,  // 1: blocky.authz.secure.v1alpha.IntrospectTokenResponse.claims:type_name -> blocky.authz.secure.v1alpha.StandardTokenClaims
	0,  // 2: blocky.authz.secure.v1alpha.TokensService.IssueToken:input_type -> blocky.authz.secure.v1alpha.IssueTokenRequest
	3,  // 3: blocky.authz.secure.v1alpha.TokensService.RefreshToken:input_type -> blocky.authz.secure.v1alpha.RefreshTokenRequest
	5,  // 4: blocky.authz.secure.v1alpha.TokensService.RevokeRefreshToken:input_type -> blocky.authz.secure.v1alpha.RevokeRefreshTokenRequest
	7,  // 5: blocky.authz.secure.v1alpha.TokensService.IntrospectToken:input_type -> blocky.authz.secure.v1alpha.IntrospectTokenRequest
	1,  // 6: blocky.authz.secure.v1alpha.TokensService.IssueToken:output_type -> blocky.authz.secure.v1alpha.IssueTokenResponse
	4,  // 7: blocky.authz.secure.v1alpha.TokensService.RefreshToken:output_type -> blocky.authz.secure.v1alpha.RefreshTokenResponse
	13, // 8: blocky.authz.secure.v1alpha.TokensService.RevokeRefreshToken:output_type -> google.protobuf.Empty
	2,  // 9: blocky.authz.secure.v1alpha.TokensService.IntrospectToken:output_type -> blocky.authz.secure.v1alpha.IntrospectTokenResponse
	6,  // [6:10] is the sub-list for method output_type
	2,  // [2:6] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_blocky_authz_secure_v1alpha_tokens_proto_init() }
func file_blocky_authz_secure_v1alpha_tokens_proto_init() {
	if File_blocky_authz_secure_v1alpha_tokens_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntrospectTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeRefreshTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StandardTokenClaims); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntrospectTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueKeyTypeTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueKeyTypeTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntrospectKeyTypeTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntrospectKeyTypeTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blocky_authz_secure_v1alpha_tokens_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_blocky_authz_secure_v1alpha_tokens_proto_goTypes,
		DependencyIndexes: file_blocky_authz_secure_v1alpha_tokens_proto_depIdxs,
		MessageInfos:      file_blocky_authz_secure_v1alpha_tokens_proto_msgTypes,
	}.Build()
	File_blocky_authz_secure_v1alpha_tokens_proto = out.File
	file_blocky_authz_secure_v1alpha_tokens_proto_rawDesc = nil
	file_blocky_authz_secure_v1alpha_tokens_proto_goTypes = nil
	file_blocky_authz_secure_v1alpha_tokens_proto_depIdxs = nil
}
