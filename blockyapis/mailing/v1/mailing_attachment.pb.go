// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: blockyapis/mailing/v1/mailing_attachment.proto

package mailingv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AttachmentUploadRequest is the request for uploading an attachment
type AttachmentUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Attachment:
	//
	//	*AttachmentUploadRequest_Header
	//	*AttachmentUploadRequest_BodyPart
	Attachment isAttachmentUploadRequest_Attachment `protobuf_oneof:"attachment"`
}

func (x *AttachmentUploadRequest) Reset() {
	*x = AttachmentUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockyapis_mailing_v1_mailing_attachment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachmentUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentUploadRequest) ProtoMessage() {}

func (x *AttachmentUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blockyapis_mailing_v1_mailing_attachment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentUploadRequest.ProtoReflect.Descriptor instead.
func (*AttachmentUploadRequest) Descriptor() ([]byte, []int) {
	return file_blockyapis_mailing_v1_mailing_attachment_proto_rawDescGZIP(), []int{0}
}

func (m *AttachmentUploadRequest) GetAttachment() isAttachmentUploadRequest_Attachment {
	if m != nil {
		return m.Attachment
	}
	return nil
}

func (x *AttachmentUploadRequest) GetHeader() *AttachmentUploadHeader {
	if x, ok := x.GetAttachment().(*AttachmentUploadRequest_Header); ok {
		return x.Header
	}
	return nil
}

func (x *AttachmentUploadRequest) GetBodyPart() *AttachmentUploadBodyPart {
	if x, ok := x.GetAttachment().(*AttachmentUploadRequest_BodyPart); ok {
		return x.BodyPart
	}
	return nil
}

type isAttachmentUploadRequest_Attachment interface {
	isAttachmentUploadRequest_Attachment()
}

type AttachmentUploadRequest_Header struct {
	Header *AttachmentUploadHeader `protobuf:"bytes,1,opt,name=header,proto3,oneof"`
}

type AttachmentUploadRequest_BodyPart struct {
	BodyPart *AttachmentUploadBodyPart `protobuf:"bytes,2,opt,name=body_part,json=bodyPart,proto3,oneof"`
}

func (*AttachmentUploadRequest_Header) isAttachmentUploadRequest_Attachment() {}

func (*AttachmentUploadRequest_BodyPart) isAttachmentUploadRequest_Attachment() {}

type AttachmentUploadHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// content_type is the MIME type of the attachment. If not specified the MIME type will be guessed from the file extension.
	ContentType string `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	// ttl_after_send is the time after which the attachment will be deleted once it has been sent.
	TtlAfterSend *durationpb.Duration `protobuf:"bytes,3,opt,name=ttl_after_send,json=ttlAfterSend,proto3" json:"ttl_after_send,omitempty"`
}

func (x *AttachmentUploadHeader) Reset() {
	*x = AttachmentUploadHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockyapis_mailing_v1_mailing_attachment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachmentUploadHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentUploadHeader) ProtoMessage() {}

func (x *AttachmentUploadHeader) ProtoReflect() protoreflect.Message {
	mi := &file_blockyapis_mailing_v1_mailing_attachment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentUploadHeader.ProtoReflect.Descriptor instead.
func (*AttachmentUploadHeader) Descriptor() ([]byte, []int) {
	return file_blockyapis_mailing_v1_mailing_attachment_proto_rawDescGZIP(), []int{1}
}

func (x *AttachmentUploadHeader) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AttachmentUploadHeader) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *AttachmentUploadHeader) GetTtlAfterSend() *durationpb.Duration {
	if x != nil {
		return x.TtlAfterSend
	}
	return nil
}

type AttachmentUploadBodyPart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AttachmentUploadBodyPart) Reset() {
	*x = AttachmentUploadBodyPart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockyapis_mailing_v1_mailing_attachment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachmentUploadBodyPart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentUploadBodyPart) ProtoMessage() {}

func (x *AttachmentUploadBodyPart) ProtoReflect() protoreflect.Message {
	mi := &file_blockyapis_mailing_v1_mailing_attachment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentUploadBodyPart.ProtoReflect.Descriptor instead.
func (*AttachmentUploadBodyPart) Descriptor() ([]byte, []int) {
	return file_blockyapis_mailing_v1_mailing_attachment_proto_rawDescGZIP(), []int{2}
}

func (x *AttachmentUploadBodyPart) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// AttachmentUploadResponse is the response for uploading an attachment
type AttachmentUploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id is the id of the attachment. It is used to reference the attachment in the mail.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ttl_after_send is the time after which the attachment will be deleted once it has been sent.
	// It could either be the value specified in the request, or a default value of the service.
	// If returned value is 0 the attachment will not be deleted.
	TtlAfterSend *durationpb.Duration `protobuf:"bytes,2,opt,name=ttl_after_send,json=ttlAfterSend,proto3" json:"ttl_after_send,omitempty"`
}

func (x *AttachmentUploadResponse) Reset() {
	*x = AttachmentUploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockyapis_mailing_v1_mailing_attachment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachmentUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentUploadResponse) ProtoMessage() {}

func (x *AttachmentUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blockyapis_mailing_v1_mailing_attachment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentUploadResponse.ProtoReflect.Descriptor instead.
func (*AttachmentUploadResponse) Descriptor() ([]byte, []int) {
	return file_blockyapis_mailing_v1_mailing_attachment_proto_rawDescGZIP(), []int{3}
}

func (x *AttachmentUploadResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AttachmentUploadResponse) GetTtlAfterSend() *durationpb.Duration {
	if x != nil {
		return x.TtlAfterSend
	}
	return nil
}

var File_blockyapis_mailing_v1_mailing_attachment_proto protoreflect.FileDescriptor

var file_blockyapis_mailing_v1_mailing_attachment_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x6d, 0x61, 0x69,
	0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x5f,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x15, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x61, 0x69,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc0, 0x01, 0x0a, 0x17, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x09,
	0x62, 0x6f, 0x64, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x61, 0x69,
	0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x6f, 0x64, 0x79, 0x50, 0x61, 0x72, 0x74,
	0x48, 0x00, 0x52, 0x08, 0x62, 0x6f, 0x64, 0x79, 0x50, 0x61, 0x72, 0x74, 0x42, 0x0c, 0x0a, 0x0a,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x16, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x0e,
	0x74, 0x74, 0x6c, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0c, 0x74, 0x74, 0x6c, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x22, 0x2e, 0x0a,
	0x18, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x42, 0x6f, 0x64, 0x79, 0x50, 0x61, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6b, 0x0a,
	0x18, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3f, 0x0a, 0x0e, 0x74, 0x74, 0x6c,
	0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x74,
	0x6c, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x32, 0x8a, 0x01, 0x0a, 0x11, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x75, 0x0a, 0x10, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x42, 0xee, 0x01, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x42, 0x16, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x79, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x3b, 0x6d, 0x61, 0x69, 0x6c, 0x69,
	0x6e, 0x67, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x42, 0x4d, 0x58, 0xaa, 0x02, 0x15, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x15, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x5c,
	0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x21, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x5c, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x17, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x3a, 0x3a, 0x4d, 0x61, 0x69,
	0x6c, 0x69, 0x6e, 0x67, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_blockyapis_mailing_v1_mailing_attachment_proto_rawDescOnce sync.Once
	file_blockyapis_mailing_v1_mailing_attachment_proto_rawDescData = file_blockyapis_mailing_v1_mailing_attachment_proto_rawDesc
)

func file_blockyapis_mailing_v1_mailing_attachment_proto_rawDescGZIP() []byte {
	file_blockyapis_mailing_v1_mailing_attachment_proto_rawDescOnce.Do(func() {
		file_blockyapis_mailing_v1_mailing_attachment_proto_rawDescData = protoimpl.X.CompressGZIP(file_blockyapis_mailing_v1_mailing_attachment_proto_rawDescData)
	})
	return file_blockyapis_mailing_v1_mailing_attachment_proto_rawDescData
}

var file_blockyapis_mailing_v1_mailing_attachment_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_blockyapis_mailing_v1_mailing_attachment_proto_goTypes = []interface{}{
	(*AttachmentUploadRequest)(nil),  // 0: blockyapis.mailing.v1.AttachmentUploadRequest
	(*AttachmentUploadHeader)(nil),   // 1: blockyapis.mailing.v1.AttachmentUploadHeader
	(*AttachmentUploadBodyPart)(nil), // 2: blockyapis.mailing.v1.AttachmentUploadBodyPart
	(*AttachmentUploadResponse)(nil), // 3: blockyapis.mailing.v1.AttachmentUploadResponse
	(*durationpb.Duration)(nil),      // 4: google.protobuf.Duration
}
var file_blockyapis_mailing_v1_mailing_attachment_proto_depIdxs = []int32{
	1, // 0: blockyapis.mailing.v1.AttachmentUploadRequest.header:type_name -> blockyapis.mailing.v1.AttachmentUploadHeader
	2, // 1: blockyapis.mailing.v1.AttachmentUploadRequest.body_part:type_name -> blockyapis.mailing.v1.AttachmentUploadBodyPart
	4, // 2: blockyapis.mailing.v1.AttachmentUploadHeader.ttl_after_send:type_name -> google.protobuf.Duration
	4, // 3: blockyapis.mailing.v1.AttachmentUploadResponse.ttl_after_send:type_name -> google.protobuf.Duration
	0, // 4: blockyapis.mailing.v1.AttachmentService.UploadAttachment:input_type -> blockyapis.mailing.v1.AttachmentUploadRequest
	3, // 5: blockyapis.mailing.v1.AttachmentService.UploadAttachment:output_type -> blockyapis.mailing.v1.AttachmentUploadResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_blockyapis_mailing_v1_mailing_attachment_proto_init() }
func file_blockyapis_mailing_v1_mailing_attachment_proto_init() {
	if File_blockyapis_mailing_v1_mailing_attachment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_blockyapis_mailing_v1_mailing_attachment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachmentUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockyapis_mailing_v1_mailing_attachment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachmentUploadHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockyapis_mailing_v1_mailing_attachment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachmentUploadBodyPart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockyapis_mailing_v1_mailing_attachment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachmentUploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_blockyapis_mailing_v1_mailing_attachment_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*AttachmentUploadRequest_Header)(nil),
		(*AttachmentUploadRequest_BodyPart)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blockyapis_mailing_v1_mailing_attachment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_blockyapis_mailing_v1_mailing_attachment_proto_goTypes,
		DependencyIndexes: file_blockyapis_mailing_v1_mailing_attachment_proto_depIdxs,
		MessageInfos:      file_blockyapis_mailing_v1_mailing_attachment_proto_msgTypes,
	}.Build()
	File_blockyapis_mailing_v1_mailing_attachment_proto = out.File
	file_blockyapis_mailing_v1_mailing_attachment_proto_rawDesc = nil
	file_blockyapis_mailing_v1_mailing_attachment_proto_goTypes = nil
	file_blockyapis_mailing_v1_mailing_attachment_proto_depIdxs = nil
}
