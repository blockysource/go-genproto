// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: blockyapis/mailing/admin/v1/mailing_provider_admin.proto

package adminv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MailingProvider is an enum of all the mailing providers
type MailingProviderType int32

const (
	MailingProviderType_MAILING_PROVIDER_UNKNOWN MailingProviderType = 0
	MailingProviderType_SMTP                     MailingProviderType = 1
	MailingProviderType_SES                      MailingProviderType = 2
	MailingProviderType_ACS                      MailingProviderType = 3
	MailingProviderType_MAILGUN                  MailingProviderType = 4
	MailingProviderType_SENDGRID                 MailingProviderType = 5
	MailingProviderType_MAILCHIMP                MailingProviderType = 6
	MailingProviderType_MANDRILL                 MailingProviderType = 7
)

// Enum value maps for MailingProviderType.
var (
	MailingProviderType_name = map[int32]string{
		0: "MAILING_PROVIDER_UNKNOWN",
		1: "SMTP",
		2: "SES",
		3: "ACS",
		4: "MAILGUN",
		5: "SENDGRID",
		6: "MAILCHIMP",
		7: "MANDRILL",
	}
	MailingProviderType_value = map[string]int32{
		"MAILING_PROVIDER_UNKNOWN": 0,
		"SMTP":                     1,
		"SES":                      2,
		"ACS":                      3,
		"MAILGUN":                  4,
		"SENDGRID":                 5,
		"MAILCHIMP":                6,
		"MANDRILL":                 7,
	}
)

func (x MailingProviderType) Enum() *MailingProviderType {
	p := new(MailingProviderType)
	*p = x
	return p
}

func (x MailingProviderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MailingProviderType) Descriptor() protoreflect.EnumDescriptor {
	return file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_enumTypes[0].Descriptor()
}

func (MailingProviderType) Type() protoreflect.EnumType {
	return &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_enumTypes[0]
}

func (x MailingProviderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MailingProviderType.Descriptor instead.
func (MailingProviderType) EnumDescriptor() ([]byte, []int) {
	return file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescGZIP(), []int{0}
}

// EventCurrentMailingProviderReplaced is the event that is fired when the current mailing provider is changed
type EventCurrentMailingProviderReplaced struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewUid string `protobuf:"bytes,1,opt,name=new_uid,json=newUid,proto3" json:"new_uid,omitempty"`
	Nonce  string `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *EventCurrentMailingProviderReplaced) Reset() {
	*x = EventCurrentMailingProviderReplaced{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventCurrentMailingProviderReplaced) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCurrentMailingProviderReplaced) ProtoMessage() {}

func (x *EventCurrentMailingProviderReplaced) ProtoReflect() protoreflect.Message {
	mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCurrentMailingProviderReplaced.ProtoReflect.Descriptor instead.
func (*EventCurrentMailingProviderReplaced) Descriptor() ([]byte, []int) {
	return file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescGZIP(), []int{0}
}

func (x *EventCurrentMailingProviderReplaced) GetNewUid() string {
	if x != nil {
		return x.NewUid
	}
	return ""
}

func (x *EventCurrentMailingProviderReplaced) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

// EventCurrentMailingProviderUpdated is a message that the mailing provider
type EventCurrentMailingProviderUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Nonce string `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *EventCurrentMailingProviderUpdated) Reset() {
	*x = EventCurrentMailingProviderUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventCurrentMailingProviderUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCurrentMailingProviderUpdated) ProtoMessage() {}

func (x *EventCurrentMailingProviderUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCurrentMailingProviderUpdated.ProtoReflect.Descriptor instead.
func (*EventCurrentMailingProviderUpdated) Descriptor() ([]byte, []int) {
	return file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescGZIP(), []int{1}
}

func (x *EventCurrentMailingProviderUpdated) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *EventCurrentMailingProviderUpdated) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

// CreateMailingProviderRequest is the request for creating a mailing provider
type CreateMailingProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type        MailingProviderType    `protobuf:"varint,3,opt,name=type,proto3,enum=blockyapis.mailing.admin.v1.MailingProviderType" json:"type,omitempty"`
	Config      *MailingProviderConfig `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	FromAddress string                 `protobuf:"bytes,5,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"` // The from address to use for sending emails (required)
}

func (x *CreateMailingProviderRequest) Reset() {
	*x = CreateMailingProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMailingProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMailingProviderRequest) ProtoMessage() {}

func (x *CreateMailingProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMailingProviderRequest.ProtoReflect.Descriptor instead.
func (*CreateMailingProviderRequest) Descriptor() ([]byte, []int) {
	return file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescGZIP(), []int{2}
}

func (x *CreateMailingProviderRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *CreateMailingProviderRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateMailingProviderRequest) GetType() MailingProviderType {
	if x != nil {
		return x.Type
	}
	return MailingProviderType_MAILING_PROVIDER_UNKNOWN
}

func (x *CreateMailingProviderRequest) GetConfig() *MailingProviderConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *CreateMailingProviderRequest) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

// CreateMailingProviderResponse is the response for creating a mailing provider
type CreateMailingProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MailingProvider *MailingProvider `protobuf:"bytes,1,opt,name=mailing_provider,json=mailingProvider,proto3" json:"mailing_provider,omitempty"`
}

func (x *CreateMailingProviderResponse) Reset() {
	*x = CreateMailingProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMailingProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMailingProviderResponse) ProtoMessage() {}

func (x *CreateMailingProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMailingProviderResponse.ProtoReflect.Descriptor instead.
func (*CreateMailingProviderResponse) Descriptor() ([]byte, []int) {
	return file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescGZIP(), []int{3}
}

func (x *CreateMailingProviderResponse) GetMailingProvider() *MailingProvider {
	if x != nil {
		return x.MailingProvider
	}
	return nil
}

// SetCurrentMailingProviderRequest is the request for setting the current mailing provider
type SetCurrentMailingProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *SetCurrentMailingProviderRequest) Reset() {
	*x = SetCurrentMailingProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCurrentMailingProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCurrentMailingProviderRequest) ProtoMessage() {}

func (x *SetCurrentMailingProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCurrentMailingProviderRequest.ProtoReflect.Descriptor instead.
func (*SetCurrentMailingProviderRequest) Descriptor() ([]byte, []int) {
	return file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescGZIP(), []int{4}
}

func (x *SetCurrentMailingProviderRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

// SetCurrentMailingProviderResponse is the response for setting the current mailing provider
type SetCurrentMailingProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetCurrentMailingProviderResponse) Reset() {
	*x = SetCurrentMailingProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCurrentMailingProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCurrentMailingProviderResponse) ProtoMessage() {}

func (x *SetCurrentMailingProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCurrentMailingProviderResponse.ProtoReflect.Descriptor instead.
func (*SetCurrentMailingProviderResponse) Descriptor() ([]byte, []int) {
	return file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescGZIP(), []int{5}
}

// UpdateMailingProviderRequest is the request for updating a mailing provider
type UpdateMailingProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	FromAddress string                 `protobuf:"bytes,3,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	Config      *MailingProviderConfig `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *UpdateMailingProviderRequest) Reset() {
	*x = UpdateMailingProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMailingProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMailingProviderRequest) ProtoMessage() {}

func (x *UpdateMailingProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMailingProviderRequest.ProtoReflect.Descriptor instead.
func (*UpdateMailingProviderRequest) Descriptor() ([]byte, []int) {
	return file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateMailingProviderRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UpdateMailingProviderRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateMailingProviderRequest) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *UpdateMailingProviderRequest) GetConfig() *MailingProviderConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// UpdateMailingProviderResponse is the response for updating a mailing provider
type UpdateMailingProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MailingProvider *MailingProvider `protobuf:"bytes,1,opt,name=mailing_provider,json=mailingProvider,proto3" json:"mailing_provider,omitempty"`
}

func (x *UpdateMailingProviderResponse) Reset() {
	*x = UpdateMailingProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMailingProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMailingProviderResponse) ProtoMessage() {}

func (x *UpdateMailingProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMailingProviderResponse.ProtoReflect.Descriptor instead.
func (*UpdateMailingProviderResponse) Descriptor() ([]byte, []int) {
	return file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateMailingProviderResponse) GetMailingProvider() *MailingProvider {
	if x != nil {
		return x.MailingProvider
	}
	return nil
}

type MailingProviderConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Config:
	//
	//	*MailingProviderConfig_SmtpConfig
	//	*MailingProviderConfig_SesConfig
	//	*MailingProviderConfig_SendgridConfig
	//	*MailingProviderConfig_MailgunConfig
	//	*MailingProviderConfig_MandrillConfig
	//	*MailingProviderConfig_AcsConfig
	Config isMailingProviderConfig_Config `protobuf_oneof:"config"`
}

func (x *MailingProviderConfig) Reset() {
	*x = MailingProviderConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailingProviderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailingProviderConfig) ProtoMessage() {}

func (x *MailingProviderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailingProviderConfig.ProtoReflect.Descriptor instead.
func (*MailingProviderConfig) Descriptor() ([]byte, []int) {
	return file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescGZIP(), []int{8}
}

func (m *MailingProviderConfig) GetConfig() isMailingProviderConfig_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (x *MailingProviderConfig) GetSmtpConfig() *SMTPConfig {
	if x, ok := x.GetConfig().(*MailingProviderConfig_SmtpConfig); ok {
		return x.SmtpConfig
	}
	return nil
}

func (x *MailingProviderConfig) GetSesConfig() *SESConfig {
	if x, ok := x.GetConfig().(*MailingProviderConfig_SesConfig); ok {
		return x.SesConfig
	}
	return nil
}

func (x *MailingProviderConfig) GetSendgridConfig() *SendgridConfig {
	if x, ok := x.GetConfig().(*MailingProviderConfig_SendgridConfig); ok {
		return x.SendgridConfig
	}
	return nil
}

func (x *MailingProviderConfig) GetMailgunConfig() *MailgunConfig {
	if x, ok := x.GetConfig().(*MailingProviderConfig_MailgunConfig); ok {
		return x.MailgunConfig
	}
	return nil
}

func (x *MailingProviderConfig) GetMandrillConfig() *MandrillConfig {
	if x, ok := x.GetConfig().(*MailingProviderConfig_MandrillConfig); ok {
		return x.MandrillConfig
	}
	return nil
}

func (x *MailingProviderConfig) GetAcsConfig() *AcsConfig {
	if x, ok := x.GetConfig().(*MailingProviderConfig_AcsConfig); ok {
		return x.AcsConfig
	}
	return nil
}

type isMailingProviderConfig_Config interface {
	isMailingProviderConfig_Config()
}

type MailingProviderConfig_SmtpConfig struct {
	SmtpConfig *SMTPConfig `protobuf:"bytes,1,opt,name=smtp_config,json=smtpConfig,proto3,oneof"`
}

type MailingProviderConfig_SesConfig struct {
	SesConfig *SESConfig `protobuf:"bytes,2,opt,name=ses_config,json=sesConfig,proto3,oneof"`
}

type MailingProviderConfig_SendgridConfig struct {
	SendgridConfig *SendgridConfig `protobuf:"bytes,3,opt,name=sendgrid_config,json=sendgridConfig,proto3,oneof"`
}

type MailingProviderConfig_MailgunConfig struct {
	MailgunConfig *MailgunConfig `protobuf:"bytes,4,opt,name=mailgun_config,json=mailgunConfig,proto3,oneof"`
}

type MailingProviderConfig_MandrillConfig struct {
	MandrillConfig *MandrillConfig `protobuf:"bytes,5,opt,name=mandrill_config,json=mandrillConfig,proto3,oneof"`
}

type MailingProviderConfig_AcsConfig struct {
	AcsConfig *AcsConfig `protobuf:"bytes,6,opt,name=acs_config,json=acsConfig,proto3,oneof"`
}

func (*MailingProviderConfig_SmtpConfig) isMailingProviderConfig_Config() {}

func (*MailingProviderConfig_SesConfig) isMailingProviderConfig_Config() {}

func (*MailingProviderConfig_SendgridConfig) isMailingProviderConfig_Config() {}

func (*MailingProviderConfig_MailgunConfig) isMailingProviderConfig_Config() {}

func (*MailingProviderConfig_MandrillConfig) isMailingProviderConfig_Config() {}

func (*MailingProviderConfig_AcsConfig) isMailingProviderConfig_Config() {}

// ListMailingProvidersRequest is the request for listing mailing providers
type ListMailingProvidersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMailingProvidersRequest) Reset() {
	*x = ListMailingProvidersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMailingProvidersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMailingProvidersRequest) ProtoMessage() {}

func (x *ListMailingProvidersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMailingProvidersRequest.ProtoReflect.Descriptor instead.
func (*ListMailingProvidersRequest) Descriptor() ([]byte, []int) {
	return file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescGZIP(), []int{9}
}

// ListMailingProvidersResponse is the response for listing mailing providers
type ListMailingProvidersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MailingProviders []*MailingProvider `protobuf:"bytes,1,rep,name=mailing_providers,json=mailingProviders,proto3" json:"mailing_providers,omitempty"`
}

func (x *ListMailingProvidersResponse) Reset() {
	*x = ListMailingProvidersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMailingProvidersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMailingProvidersResponse) ProtoMessage() {}

func (x *ListMailingProvidersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMailingProvidersResponse.ProtoReflect.Descriptor instead.
func (*ListMailingProvidersResponse) Descriptor() ([]byte, []int) {
	return file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescGZIP(), []int{10}
}

func (x *ListMailingProvidersResponse) GetMailingProviders() []*MailingProvider {
	if x != nil {
		return x.MailingProviders
	}
	return nil
}

// GetCurrentMailingProviderRequest is the request for getting the current mailing provider
type GetCurrentMailingProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCurrentMailingProviderRequest) Reset() {
	*x = GetCurrentMailingProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentMailingProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentMailingProviderRequest) ProtoMessage() {}

func (x *GetCurrentMailingProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentMailingProviderRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentMailingProviderRequest) Descriptor() ([]byte, []int) {
	return file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescGZIP(), []int{11}
}

type GetCurrentMailingProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MailingProvider *MailingProvider `protobuf:"bytes,1,opt,name=mailing_provider,json=mailingProvider,proto3" json:"mailing_provider,omitempty"`
}

func (x *GetCurrentMailingProviderResponse) Reset() {
	*x = GetCurrentMailingProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentMailingProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentMailingProviderResponse) ProtoMessage() {}

func (x *GetCurrentMailingProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentMailingProviderResponse.ProtoReflect.Descriptor instead.
func (*GetCurrentMailingProviderResponse) Descriptor() ([]byte, []int) {
	return file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescGZIP(), []int{12}
}

func (x *GetCurrentMailingProviderResponse) GetMailingProvider() *MailingProvider {
	if x != nil {
		return x.MailingProvider
	}
	return nil
}

// MailingProvider is the configuration for a mailing provider
type MailingProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	FromAddress string                 `protobuf:"bytes,3,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	Type        MailingProviderType    `protobuf:"varint,4,opt,name=type,proto3,enum=blockyapis.mailing.admin.v1.MailingProviderType" json:"type,omitempty"`
	InUse       bool                   `protobuf:"varint,5,opt,name=in_use,json=inUse,proto3" json:"in_use,omitempty"`
	Config      *MailingProviderConfig `protobuf:"bytes,6,opt,name=config,proto3" json:"config,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	VerifiedAt  *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=verified_at,json=verifiedAt,proto3" json:"verified_at,omitempty"`
}

func (x *MailingProvider) Reset() {
	*x = MailingProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailingProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailingProvider) ProtoMessage() {}

func (x *MailingProvider) ProtoReflect() protoreflect.Message {
	mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailingProvider.ProtoReflect.Descriptor instead.
func (*MailingProvider) Descriptor() ([]byte, []int) {
	return file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescGZIP(), []int{13}
}

func (x *MailingProvider) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *MailingProvider) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MailingProvider) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *MailingProvider) GetType() MailingProviderType {
	if x != nil {
		return x.Type
	}
	return MailingProviderType_MAILING_PROVIDER_UNKNOWN
}

func (x *MailingProvider) GetInUse() bool {
	if x != nil {
		return x.InUse
	}
	return false
}

func (x *MailingProvider) GetConfig() *MailingProviderConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *MailingProvider) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MailingProvider) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *MailingProvider) GetVerifiedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.VerifiedAt
	}
	return nil
}

// SMTPConfig is the configuration for the SMTP  mailing provider
type SMTPConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host     string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port     int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *SMTPConfig) Reset() {
	*x = SMTPConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMTPConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMTPConfig) ProtoMessage() {}

func (x *SMTPConfig) ProtoReflect() protoreflect.Message {
	mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMTPConfig.ProtoReflect.Descriptor instead.
func (*SMTPConfig) Descriptor() ([]byte, []int) {
	return file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescGZIP(), []int{14}
}

func (x *SMTPConfig) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *SMTPConfig) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *SMTPConfig) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SMTPConfig) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// SESConfig is the configuration for the SES (Amazon Simple Email Service) mailing provider.
type SESConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessKeyId     string `protobuf:"bytes,1,opt,name=access_key_id,json=accessKeyId,proto3" json:"access_key_id,omitempty"`
	SecretAccessKey string `protobuf:"bytes,2,opt,name=secret_access_key,json=secretAccessKey,proto3" json:"secret_access_key,omitempty"`
	Region          string `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *SESConfig) Reset() {
	*x = SESConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SESConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SESConfig) ProtoMessage() {}

func (x *SESConfig) ProtoReflect() protoreflect.Message {
	mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SESConfig.ProtoReflect.Descriptor instead.
func (*SESConfig) Descriptor() ([]byte, []int) {
	return file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescGZIP(), []int{15}
}

func (x *SESConfig) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *SESConfig) GetSecretAccessKey() string {
	if x != nil {
		return x.SecretAccessKey
	}
	return ""
}

func (x *SESConfig) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

// SendgridConfig is the configuration for the Sendgrid mailing provider
type SendgridConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiKey string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
}

func (x *SendgridConfig) Reset() {
	*x = SendgridConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendgridConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendgridConfig) ProtoMessage() {}

func (x *SendgridConfig) ProtoReflect() protoreflect.Message {
	mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendgridConfig.ProtoReflect.Descriptor instead.
func (*SendgridConfig) Descriptor() ([]byte, []int) {
	return file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescGZIP(), []int{16}
}

func (x *SendgridConfig) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

// MailgunConfig is the configuration for the Mailgun mailing provider
type MailgunConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiKey string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	Domain string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Region string `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *MailgunConfig) Reset() {
	*x = MailgunConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailgunConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailgunConfig) ProtoMessage() {}

func (x *MailgunConfig) ProtoReflect() protoreflect.Message {
	mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailgunConfig.ProtoReflect.Descriptor instead.
func (*MailgunConfig) Descriptor() ([]byte, []int) {
	return file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescGZIP(), []int{17}
}

func (x *MailgunConfig) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *MailgunConfig) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *MailgunConfig) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

// MandrillConfig is the configuration for the Mandrill mailing provider
type MandrillConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiKey string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
}

func (x *MandrillConfig) Reset() {
	*x = MandrillConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MandrillConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MandrillConfig) ProtoMessage() {}

func (x *MandrillConfig) ProtoReflect() protoreflect.Message {
	mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MandrillConfig.ProtoReflect.Descriptor instead.
func (*MandrillConfig) Descriptor() ([]byte, []int) {
	return file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescGZIP(), []int{18}
}

func (x *MandrillConfig) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

// AcsConfig is the configuration for the ACS mailing provider
type AcsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionString string `protobuf:"bytes,1,opt,name=connection_string,json=connectionString,proto3" json:"connection_string,omitempty"`
}

func (x *AcsConfig) Reset() {
	*x = AcsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcsConfig) ProtoMessage() {}

func (x *AcsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcsConfig.ProtoReflect.Descriptor instead.
func (*AcsConfig) Descriptor() ([]byte, []int) {
	return file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescGZIP(), []int{19}
}

func (x *AcsConfig) GetConnectionString() string {
	if x != nil {
		return x.ConnectionString
	}
	return ""
}

var File_blockyapis_mailing_admin_v1_mailing_provider_admin_proto protoreflect.FileDescriptor

var file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDesc = []byte{
	0x0a, 0x38, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x6d, 0x61, 0x69,
	0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61,
	0x69, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x54, 0x0a, 0x23, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6e, 0x65, 0x77, 0x55, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x4c,
	0x0a, 0x22, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61,
	0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0xf9, 0x01, 0x0a,
	0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x30, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d,
	0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f,
	0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x78, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x6d, 0x61, 0x69,
	0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x52, 0x0f, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x22, 0x34, 0x0a, 0x20, 0x53, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x23, 0x0a, 0x21, 0x53, 0x65, 0x74, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb3, 0x01,
	0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x4a, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x22, 0x78, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69,
	0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x5f,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x61, 0x69, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69,
	0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x0f, 0x6d, 0x61,
	0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x84, 0x04,
	0x0a, 0x15, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4a, 0x0a, 0x0b, 0x73, 0x6d, 0x74, 0x70, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x4d, 0x54, 0x50, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x6d, 0x74, 0x70, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x47, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x45, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48,
	0x00, 0x52, 0x09, 0x73, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x56, 0x0a, 0x0f,
	0x73, 0x65, 0x6e, 0x64, 0x67, 0x72, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x67, 0x72, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x67, 0x72, 0x69, 0x64, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x53, 0x0a, 0x0e, 0x6d, 0x61, 0x69, 0x6c, 0x67, 0x75, 0x6e, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x67,
	0x75, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x61, 0x69, 0x6c,
	0x67, 0x75, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x56, 0x0a, 0x0f, 0x6d, 0x61, 0x6e,
	0x64, 0x72, 0x69, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x61, 0x6e, 0x64, 0x72, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48,
	0x00, 0x52, 0x0e, 0x6d, 0x61, 0x6e, 0x64, 0x72, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x47, 0x0a, 0x0a, 0x61, 0x63, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52,
	0x09, 0x61, 0x63, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0x1d, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x69, 0x6c,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x79, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x11, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x61, 0x69, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69,
	0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x10, 0x6d, 0x61,
	0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x22, 0x22,
	0x0a, 0x20, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x69, 0x6c,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x7c, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x6d, 0x61, 0x69, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d,
	0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52,
	0x0f, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x22, 0xb6, 0x03, 0x0a, 0x0f, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x44, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0b,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x74, 0x22, 0x6c, 0x0a, 0x0a, 0x53, 0x4d, 0x54,
	0x50, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x73, 0x0a, 0x09, 0x53, 0x45, 0x53, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b,
	0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x29, 0x0a, 0x0e,
	0x53, 0x65, 0x6e, 0x64, 0x67, 0x72, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x17,
	0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x22, 0x58, 0x0a, 0x0d, 0x4d, 0x61, 0x69, 0x6c, 0x67,
	0x75, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x22, 0x29, 0x0a, 0x0e, 0x4d, 0x61, 0x6e, 0x64, 0x72, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x22, 0x38, 0x0a, 0x09,
	0x41, 0x63, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x2a, 0x87, 0x01, 0x0a, 0x13, 0x4d, 0x61, 0x69, 0x6c, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x18, 0x4d, 0x41, 0x49, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44,
	0x45, 0x52, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x53, 0x4d, 0x54, 0x50, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x45, 0x53, 0x10, 0x02, 0x12,
	0x07, 0x0a, 0x03, 0x41, 0x43, 0x53, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x41, 0x49, 0x4c,
	0x47, 0x55, 0x4e, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x45, 0x4e, 0x44, 0x47, 0x52, 0x49,
	0x44, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x41, 0x49, 0x4c, 0x43, 0x48, 0x49, 0x4d, 0x50,
	0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x41, 0x4e, 0x44, 0x52, 0x49, 0x4c, 0x4c, 0x10, 0x07,
	0x32, 0x80, 0x06, 0x0a, 0x14, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x8e, 0x01, 0x0a, 0x15, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x12, 0x39, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x61, 0x69, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9a, 0x01, 0x0a, 0x19, 0x53,
	0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x3d, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x79, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8e, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x12, 0x39, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d,
	0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8b, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x12, 0x38, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d,
	0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61,
	0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9a, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x3d, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x69,
	0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x69, 0x6c,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x94, 0x02, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x19, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x67, 0x6f,
	0x2d, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x79,
	0x61, 0x70, 0x69, 0x73, 0x2f, 0x6d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x42, 0x4d, 0x41, 0xaa, 0x02, 0x1b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x56,
	0x31, 0xca, 0x02, 0x1b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x5c, 0x4d,
	0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x5c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x5c, 0x56, 0x31, 0xe2,
	0x02, 0x27, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x5c, 0x4d, 0x61, 0x69,
	0x6c, 0x69, 0x6e, 0x67, 0x5c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x79, 0x61, 0x70, 0x69, 0x73, 0x3a, 0x3a, 0x4d, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x3a,
	0x3a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescOnce sync.Once
	file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescData = file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDesc
)

func file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescGZIP() []byte {
	file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescOnce.Do(func() {
		file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescData = protoimpl.X.CompressGZIP(file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescData)
	})
	return file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDescData
}

var file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_goTypes = []interface{}{
	(MailingProviderType)(0),                    // 0: blockyapis.mailing.admin.v1.MailingProviderType
	(*EventCurrentMailingProviderReplaced)(nil), // 1: blockyapis.mailing.admin.v1.EventCurrentMailingProviderReplaced
	(*EventCurrentMailingProviderUpdated)(nil),  // 2: blockyapis.mailing.admin.v1.EventCurrentMailingProviderUpdated
	(*CreateMailingProviderRequest)(nil),        // 3: blockyapis.mailing.admin.v1.CreateMailingProviderRequest
	(*CreateMailingProviderResponse)(nil),       // 4: blockyapis.mailing.admin.v1.CreateMailingProviderResponse
	(*SetCurrentMailingProviderRequest)(nil),    // 5: blockyapis.mailing.admin.v1.SetCurrentMailingProviderRequest
	(*SetCurrentMailingProviderResponse)(nil),   // 6: blockyapis.mailing.admin.v1.SetCurrentMailingProviderResponse
	(*UpdateMailingProviderRequest)(nil),        // 7: blockyapis.mailing.admin.v1.UpdateMailingProviderRequest
	(*UpdateMailingProviderResponse)(nil),       // 8: blockyapis.mailing.admin.v1.UpdateMailingProviderResponse
	(*MailingProviderConfig)(nil),               // 9: blockyapis.mailing.admin.v1.MailingProviderConfig
	(*ListMailingProvidersRequest)(nil),         // 10: blockyapis.mailing.admin.v1.ListMailingProvidersRequest
	(*ListMailingProvidersResponse)(nil),        // 11: blockyapis.mailing.admin.v1.ListMailingProvidersResponse
	(*GetCurrentMailingProviderRequest)(nil),    // 12: blockyapis.mailing.admin.v1.GetCurrentMailingProviderRequest
	(*GetCurrentMailingProviderResponse)(nil),   // 13: blockyapis.mailing.admin.v1.GetCurrentMailingProviderResponse
	(*MailingProvider)(nil),                     // 14: blockyapis.mailing.admin.v1.MailingProvider
	(*SMTPConfig)(nil),                          // 15: blockyapis.mailing.admin.v1.SMTPConfig
	(*SESConfig)(nil),                           // 16: blockyapis.mailing.admin.v1.SESConfig
	(*SendgridConfig)(nil),                      // 17: blockyapis.mailing.admin.v1.SendgridConfig
	(*MailgunConfig)(nil),                       // 18: blockyapis.mailing.admin.v1.MailgunConfig
	(*MandrillConfig)(nil),                      // 19: blockyapis.mailing.admin.v1.MandrillConfig
	(*AcsConfig)(nil),                           // 20: blockyapis.mailing.admin.v1.AcsConfig
	(*timestamppb.Timestamp)(nil),               // 21: google.protobuf.Timestamp
}
var file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_depIdxs = []int32{
	0,  // 0: blockyapis.mailing.admin.v1.CreateMailingProviderRequest.type:type_name -> blockyapis.mailing.admin.v1.MailingProviderType
	9,  // 1: blockyapis.mailing.admin.v1.CreateMailingProviderRequest.config:type_name -> blockyapis.mailing.admin.v1.MailingProviderConfig
	14, // 2: blockyapis.mailing.admin.v1.CreateMailingProviderResponse.mailing_provider:type_name -> blockyapis.mailing.admin.v1.MailingProvider
	9,  // 3: blockyapis.mailing.admin.v1.UpdateMailingProviderRequest.config:type_name -> blockyapis.mailing.admin.v1.MailingProviderConfig
	14, // 4: blockyapis.mailing.admin.v1.UpdateMailingProviderResponse.mailing_provider:type_name -> blockyapis.mailing.admin.v1.MailingProvider
	15, // 5: blockyapis.mailing.admin.v1.MailingProviderConfig.smtp_config:type_name -> blockyapis.mailing.admin.v1.SMTPConfig
	16, // 6: blockyapis.mailing.admin.v1.MailingProviderConfig.ses_config:type_name -> blockyapis.mailing.admin.v1.SESConfig
	17, // 7: blockyapis.mailing.admin.v1.MailingProviderConfig.sendgrid_config:type_name -> blockyapis.mailing.admin.v1.SendgridConfig
	18, // 8: blockyapis.mailing.admin.v1.MailingProviderConfig.mailgun_config:type_name -> blockyapis.mailing.admin.v1.MailgunConfig
	19, // 9: blockyapis.mailing.admin.v1.MailingProviderConfig.mandrill_config:type_name -> blockyapis.mailing.admin.v1.MandrillConfig
	20, // 10: blockyapis.mailing.admin.v1.MailingProviderConfig.acs_config:type_name -> blockyapis.mailing.admin.v1.AcsConfig
	14, // 11: blockyapis.mailing.admin.v1.ListMailingProvidersResponse.mailing_providers:type_name -> blockyapis.mailing.admin.v1.MailingProvider
	14, // 12: blockyapis.mailing.admin.v1.GetCurrentMailingProviderResponse.mailing_provider:type_name -> blockyapis.mailing.admin.v1.MailingProvider
	0,  // 13: blockyapis.mailing.admin.v1.MailingProvider.type:type_name -> blockyapis.mailing.admin.v1.MailingProviderType
	9,  // 14: blockyapis.mailing.admin.v1.MailingProvider.config:type_name -> blockyapis.mailing.admin.v1.MailingProviderConfig
	21, // 15: blockyapis.mailing.admin.v1.MailingProvider.created_at:type_name -> google.protobuf.Timestamp
	21, // 16: blockyapis.mailing.admin.v1.MailingProvider.updated_at:type_name -> google.protobuf.Timestamp
	21, // 17: blockyapis.mailing.admin.v1.MailingProvider.verified_at:type_name -> google.protobuf.Timestamp
	3,  // 18: blockyapis.mailing.admin.v1.MailingProviderAdmin.CreateMailingProvider:input_type -> blockyapis.mailing.admin.v1.CreateMailingProviderRequest
	5,  // 19: blockyapis.mailing.admin.v1.MailingProviderAdmin.SetCurrentMailingProvider:input_type -> blockyapis.mailing.admin.v1.SetCurrentMailingProviderRequest
	7,  // 20: blockyapis.mailing.admin.v1.MailingProviderAdmin.UpdateMailingProvider:input_type -> blockyapis.mailing.admin.v1.UpdateMailingProviderRequest
	10, // 21: blockyapis.mailing.admin.v1.MailingProviderAdmin.ListMailingProviders:input_type -> blockyapis.mailing.admin.v1.ListMailingProvidersRequest
	12, // 22: blockyapis.mailing.admin.v1.MailingProviderAdmin.GetCurrentMailingProvider:input_type -> blockyapis.mailing.admin.v1.GetCurrentMailingProviderRequest
	4,  // 23: blockyapis.mailing.admin.v1.MailingProviderAdmin.CreateMailingProvider:output_type -> blockyapis.mailing.admin.v1.CreateMailingProviderResponse
	6,  // 24: blockyapis.mailing.admin.v1.MailingProviderAdmin.SetCurrentMailingProvider:output_type -> blockyapis.mailing.admin.v1.SetCurrentMailingProviderResponse
	8,  // 25: blockyapis.mailing.admin.v1.MailingProviderAdmin.UpdateMailingProvider:output_type -> blockyapis.mailing.admin.v1.UpdateMailingProviderResponse
	11, // 26: blockyapis.mailing.admin.v1.MailingProviderAdmin.ListMailingProviders:output_type -> blockyapis.mailing.admin.v1.ListMailingProvidersResponse
	13, // 27: blockyapis.mailing.admin.v1.MailingProviderAdmin.GetCurrentMailingProvider:output_type -> blockyapis.mailing.admin.v1.GetCurrentMailingProviderResponse
	23, // [23:28] is the sub-list for method output_type
	18, // [18:23] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_init() }
func file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_init() {
	if File_blockyapis_mailing_admin_v1_mailing_provider_admin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventCurrentMailingProviderReplaced); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventCurrentMailingProviderUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMailingProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMailingProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCurrentMailingProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCurrentMailingProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMailingProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMailingProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailingProviderConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMailingProvidersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMailingProvidersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentMailingProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentMailingProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailingProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMTPConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SESConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendgridConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailgunConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MandrillConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*MailingProviderConfig_SmtpConfig)(nil),
		(*MailingProviderConfig_SesConfig)(nil),
		(*MailingProviderConfig_SendgridConfig)(nil),
		(*MailingProviderConfig_MailgunConfig)(nil),
		(*MailingProviderConfig_MandrillConfig)(nil),
		(*MailingProviderConfig_AcsConfig)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_goTypes,
		DependencyIndexes: file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_depIdxs,
		EnumInfos:         file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_enumTypes,
		MessageInfos:      file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_msgTypes,
	}.Build()
	File_blockyapis_mailing_admin_v1_mailing_provider_admin_proto = out.File
	file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_rawDesc = nil
	file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_goTypes = nil
	file_blockyapis_mailing_admin_v1_mailing_provider_admin_proto_depIdxs = nil
}
